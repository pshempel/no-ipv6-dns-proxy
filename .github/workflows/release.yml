name: Release Debian Package

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on tags like v1.2.1

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          debhelper \
          dh-python \
          python3-all \
          python3-setuptools \
          python3-twisted \
          python3-openssl \
          fakeroot
    
    - name: Build Debian package
      run: |
        dpkg-buildpackage -rfakeroot -b -uc -us
        
    - name: Get package info
      id: pkg_info
      run: |
        DEB_FILE=$(ls ../*.deb | head -1)
        DEB_NAME=$(basename $DEB_FILE)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "deb_file=$DEB_FILE" >> $GITHUB_OUTPUT
        echo "deb_name=$DEB_NAME" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: DNS Proxy ${{ steps.pkg_info.outputs.version }}
        body: |
          ## DNS Proxy ${{ steps.pkg_info.outputs.version }}
          
          ### Installation
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/${{ steps.pkg_info.outputs.deb_name }}
          sudo dpkg -i ${{ steps.pkg_info.outputs.deb_name }}
          ```
          
          ### Changes
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/debian/changelog) for details.
        draft: false
        prerelease: false
        
    - name: Upload Debian Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.pkg_info.outputs.deb_file }}
        asset_name: ${{ steps.pkg_info.outputs.deb_name }}
        asset_content_type: application/vnd.debian.binary-package