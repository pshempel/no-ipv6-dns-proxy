# Human-Friendly DNS Proxy Configuration Example
# This shows the new upstream server configuration format

[dns-proxy]
listen-port = 53
listen-address = 0.0.0.0
user = dns-proxy
group = dns-proxy

# =====================================================
# UPSTREAM DNS SERVERS - Human-Friendly Configuration
# =====================================================
# Define each upstream server in its own named section.
# This makes the config self-documenting and easy to maintain.
#
# Section naming: [upstream:your-descriptive-name]
# 
# Required fields:
#   address = IP address of the DNS server
#
# Optional fields:
#   port = DNS port (default: 53)
#   weight = Traffic distribution weight 1-1000 (default: 100)
#   priority = Failover priority 1-10, lower is better (default: 1)
#   timeout = Query timeout in seconds (default: 5.0)
#   health_check = Monitor this server's health (default: true)
#   description = Human-readable description for documentation
# =====================================================

# Primary DNS servers (priority 1)
[upstream:cloudflare-primary]
description = Cloudflare's primary anycast DNS - Fast and privacy-focused
address = 1.1.1.1
weight = 100
priority = 1
health_check = true

[upstream:cloudflare-secondary]
description = Cloudflare's secondary anycast DNS
address = 1.0.0.1
weight = 100
priority = 1
health_check = true

# Fallback servers (priority 2)
[upstream:google-primary]
description = Google Public DNS - Reliable fallback
address = 8.8.8.8
weight = 80  # Slightly less traffic than Cloudflare
priority = 2  # Only used if all priority 1 servers fail
health_check = true

[upstream:google-secondary]
description = Google Public DNS secondary
address = 8.8.4.4
weight = 80
priority = 2
health_check = true

# Alternative providers (priority 3)
[upstream:quad9-secure]
description = Quad9 - Security-focused DNS with malware blocking
address = 9.9.9.9
weight = 50
priority = 3
timeout = 3.0  # Slightly lower timeout
health_check = true

# Local network servers
[upstream:pihole-local]
description = Local Pi-hole for ad blocking on home network
address = 192.168.1.10
port = 5353  # Running on non-standard port
weight = 200  # Prefer local server when healthy
priority = 1
health_check = false  # Don't health check internal services
timeout = 1.0  # Fast timeout for local network

# IPv6 examples
[upstream:cloudflare-ipv6]
description = Cloudflare DNS over IPv6
address = 2606:4700:4700::1111
weight = 100
priority = 1
health_check = true

[upstream:google-ipv6]
description = Google DNS over IPv6
address = 2001:4860:4860::8888
weight = 80
priority = 2

# =====================================================
# REST OF CONFIGURATION
# =====================================================

[cname-flattener]
max-recursion = 10
remove-aaaa = false  # Keep IPv6 records

[cache]
max-size = 10000
default-ttl = 300
min-ttl = 60
max-ttl = 86400

[log-file]
log-file = /var/log/dns-proxy/dns-proxy.log
debug-level = INFO
syslog = false

# =====================================================
# BENEFITS OF THIS FORMAT:
# =====================================================
# 1. Self-documenting: Section names explain purpose
# 2. Easy to maintain: Add/remove servers without renumbering
# 3. Flexible: Use any naming scheme that makes sense to you
# 4. Clear logs: "upstream:cloudflare-primary is down" vs "server 1 is down"
# 5. Git-friendly: Changes show meaningful context
# =====================================================